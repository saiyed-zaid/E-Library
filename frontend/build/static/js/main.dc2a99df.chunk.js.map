{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","redux/actions/userActions.js","components/Header/index.jsx","redux/actions/BookActions.js","redux/ActionApi.js","redux/actions/GlobalActions.js","redux/const.js","components/Singup/index.jsx","components/Singin/index.jsx","components/forget-password/index.jsx","components/Reset-Password/index.jsx","components/Dashboard/writer.jsx","components/Dashboard/reader.jsx","components/Books/index.jsx","components/Books/book.jsx","components/Books/add.jsx","components/Books/edit.jsx","components/Search/index.jsx","components/ErrorPages/404.jsx","components/Helper/PrivateRoute.js","components/Plans/index.jsx","components/Books/view.jsx","redux/reducers/BookReducer.js","redux/reducers/userReducer.js","redux/reducers/GlobalReducer.js","redux/reducers/index.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","login","data","type","payload","authUser","Header","Layout","withRouter","props","dispatch","useDispatch","useSelector","state","menu","Item","icon","UserOutlined","target","rel","href","LockOutlined","PoweroffOutlined","danger","onClick","history","push","style","position","top","zIndex","width","className","theme","mode","defaultSelectedKeys","textAlign","isLoggedIn","to","role","key","overlay","backgroundColor","verticalAlign","size","gap","username","charAt","toUpperCase","slice","GET","signin","postData","a","Axios","post","process","response","message","error","socialLogin","fetchAuthUser","_id","token","get","headers","Accept","Authorization","fetchAuthorBooks","books","fetchBook","book","fetchCategories","categories","insertData","success","updateData","updateId","patch","insertCurrentRead","canRead","warning","CLIENT_ID","Step","Steps","Option","Select","ActionButtons","steps","current","next","prev","length","htmlType","alert","margin","Signup","handleRegistrationChange","event","setState","registrationFields","handleRoleChange","roleFields","handlePersonalDetailsChange","personalDetailsFields","currentStep","hasError","forEach","field","errors","touched","googleData","googleId","userData","givenName","email","name","value","console","log","signupDispatch","handleVerifyAccountChange","verificationFields","handleVerifyAccount","verificationDispatch","responseGoogle","profileObj","bookCategories","resultStatus","title","content","CompassOutlined","InfoCircleOutlined","CheckCircleOutlined","layout","labelCol","span","wrapperCol","this","map","step","index","form","onFieldsChange","changedFields","allFields","label","rules","required","min","Password","dependencies","getFieldValue","validator","rule","Promise","reject","clientId","buttonText","onSuccess","onFailure","cookiePolicy","placeholder","allowClear","category","status","isVerified","subTitle","extra","alignItems","React","Component","connect","signup","verifyAccount","globalState","global","onHandleSubmit","values","initialValues","remember","onFinish","prefix","loading","ForgetPassword","notification","description","duration","SmileOutlined","color","resetPasswordToken","match","params","password","Content","window","localStorage","getItem","mostLikedBooks","user","mostReadBooks","useEffect","FetchMostReadBooks","gutter","active","image","Empty","PRESENTED_IMAGE_SIMPLE","imageStyle","height","xs","md","bordered","cover","alt","src","photo","onError","objectFit","numberOfRead","BookTwoTone","count","LikeTwoTone","dislikes","DislikeTwoTone","likes","plan","favouriteBooks","favouriteBook","ReadlaterBooks","bookToReadLater","shuffled","sort","Math","random","currentReading","handleBookView","handleBookRead","url","bookId","setTimeout","handleContinueBookRemove","deleteId","delete","isRemoved","successText","deleteCurrentRead","onConfirm","reference","onCancel","okText","cancelText","cursor","CloseCircleOutlined","ViewBook","Card","Meta","useState","numPages","setNumPages","pageNumber","file","onLoadSuccess","MyBooks","isViewed","setIsViewed","handleDelete","deleteData","ghost","onBack","back","actions","EditOutlined","DeleteOutlined","EyeOutlined","EyeInvisibleOutlined","TextArea","Input","desc","Editor","onChange","onSubmit","submitting","rateValue","onRateChange","hasRated","defaultValue","tooltips","character","rows","Book","comment","setComment","rate","setRate","hasLiked","hasDisliked","hasFavourite","hasReadLater","findIndex","ratings","handleLike","handleDislike","handleFavourite","hasfavourite","handleReadlater","toggleReadlater","valueStyle","fontSize","LikeFilled","LikeOutlined","DislikeFilled","DislikeOutlined","ReadFilled","ReadOutlined","HeartFilled","HeartOutlined","comments","author","postedBy","avatar","text","datetime","moment","format","created","fromNow","disabled","commentData","setReference","setPhoto","Dragger","Upload","referenceProps","multiple","action","info","fileList","isUploaded","public_uri","photoProp","handleSubmit","InboxOutlined","Group","Edit","filter","photoProps","initialValue","pages","isOnTrueEvent","Search","SearchBooks","searchFilter","setSearchFilter","filteredCategory","setFilteredCategory","filteredAuthor","setFilteredAuthor","searchResult","setSearchResult","searchBooks","authors","compact","onSearch","filtered","startsWith","handleSearchChange","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","firstname","ErrorPage","PrivateRoute","component","rest","render","pathname","from","location","Text","Typography","Title","handlePlanSelection","level","border","display","CheckOutlined","MyApp","setPageNumber","initState","JSON","parse","rootReducer","combineReducers","setItem","stringify","removeItem","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","MainComponent","padding","marginTop","minHeight","exact","path","Signin","ResetPassword","AddBook","EditBook","Plans","App","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dc2a99df.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 144;","export const signup = () => {\r\n  return {\r\n    type: \"LOADING\",\r\n  };\r\n};\r\n\r\nexport const login = (data) => {\r\n  return {\r\n    type: \"LOGIN\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const authUser = (data) => {\r\n  return {\r\n    type: \"AUTHUSER\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const Logout = () => {\r\n  return {\r\n    type: \"LOGOUT\",\r\n  };\r\n};\r\n\r\nexport const GET = () => {\r\n  return {\r\n    type: \"GET\",\r\n  };\r\n};\r\n\r\nexport const success = (data) => {\r\n  return {\r\n    type: \"SUCCESS\",\r\n    payload: data,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Layout, Menu, Avatar, Dropdown } from \"antd\";\r\n\r\nimport {\r\n  PoweroffOutlined,\r\n  UserOutlined,\r\n  LockOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { Logout } from \"../../redux/actions/userActions\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst Navbar = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const authUser = useSelector((state) => state.authUser.authUser);\r\n\r\n  const logout = () => {\r\n    dispatch(Logout());\r\n\r\n    props.history.push(\"/signin\");\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item icon={<UserOutlined />}>\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.alipay.com/\"\r\n        >\r\n          Manage Profile\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item icon={<LockOutlined />}>\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.taobao.com/\"\r\n        >\r\n          Change Password\r\n        </a>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item icon={<PoweroffOutlined />} danger onClick={logout}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Header style={{ position: \"sticky\", top: \"0\", zIndex: 1, width: \"100%\" }}>\r\n      <div className=\"logo\" />\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={[\"2\"]}\r\n        style={{ textAlign: \"right\" }}\r\n      >\r\n        {props.isLoggedIn && (\r\n          <Menu.Item>\r\n            <Link to=\"/\">Dashboard</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {props.isLoggedIn && authUser.role === \"writer\" && (\r\n          <Menu.Item>\r\n            <Link to=\"/add-book\">Add Book</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {props.isLoggedIn && authUser.role === \"writer\" && (\r\n          <Menu.Item>\r\n            <Link to=\"/mybooks\">My Books</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {props.isLoggedIn && authUser.role === \"reader\" && (\r\n          <Menu.Item>\r\n            <Link to=\"/search\">Search</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {props.isLoggedIn && (\r\n          <Menu.Item key=\"3\">\r\n            <Dropdown overlay={menu}>\r\n              <Avatar\r\n                style={{ backgroundColor: \"#7265e6\", verticalAlign: \"middle\" }}\r\n                size=\"large\"\r\n                gap={1}\r\n              >\r\n                {authUser &&\r\n                  authUser.username.charAt(0).toUpperCase() +\r\n                    authUser.username.slice(1)}\r\n              </Avatar>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {!props.isLoggedIn && (\r\n          <Menu.Item key=\"1\">\r\n            <Link to=\"/signup\">Signup</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {!props.isLoggedIn && (\r\n          <Menu.Item key=\"2\">\r\n            <Link to=\"/signin\">Login</Link>\r\n          </Menu.Item>\r\n        )}\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","export const GET = (data) => {\r\n  return {\r\n    type: \"GETBOOKS\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const GETALLBOOKS = (data) => {\r\n  return {\r\n    type: \"GETALLBOOKS\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const GETBOOK = (data) => {\r\n  return {\r\n    type: \"GETBOOK\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const SETBOOKTOREAD = (data) => {\r\n  return {\r\n    type: \"SETBOOKTOREAD\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const GETALLCATEGORIES = (data) => {\r\n  return {\r\n    type: \"GETALLCATEGORIES\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const GETAUTHORS = (data) => {\r\n  return {\r\n    type: \"GETAUTHORS\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const INSERT = () => {\r\n  return {\r\n    type: \"INSERT\",\r\n  };\r\n};\r\n\r\nexport const UPDATE = () => {\r\n  return {\r\n    type: \"UPDATE\",\r\n  };\r\n};\r\n\r\nexport const DELETE = () => {\r\n  return {\r\n    type: \"DELETE\",\r\n  };\r\n};\r\n\r\nexport const LOADING = () => {\r\n  return {\r\n    type: \"LOADING\",\r\n  };\r\n};\r\n\r\nexport const SUCCESS = () => {\r\n  return {\r\n    type: \"SUCCESS\",\r\n  };\r\n};\r\n\r\nexport const FAILURE = () => {\r\n  return {\r\n    type: \"FAILURE\",\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { message, notification } from \"antd\";\r\n\r\nimport { SmileOutlined } from \"@ant-design/icons\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nimport { login, authUser } from \"./actions/userActions\";\r\n\r\nimport {\r\n  GET,\r\n  INSERT,\r\n  GETALLBOOKS,\r\n  GETALLCATEGORIES,\r\n  GETAUTHORS,\r\n  GETBOOK,\r\n  SETBOOKTOREAD,\r\n} from \"./actions/BookActions\";\r\n\r\nimport { LOADING, SUCCESSS } from \"./actions/GlobalActions\";\r\n//API RELATED METHODS\r\nexport const signup = (postData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(LOADING());\r\n      const response = await Axios.post(\r\n        `${process.env.REACT_APP_BACKEND_URI}/signup`,\r\n        postData\r\n      );\r\n\r\n      dispatch(SUCCESSS());\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\nexport const verifyAccount = (postData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(LOADING());\r\n\r\n      const response = await Axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URI}/user/verification`,\r\n        postData\r\n      );\r\n\r\n      dispatch(SUCCESSS());\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\nexport const signin = (postData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(LOADING());\r\n\r\n      const response = await Axios.post(\r\n        `${process.env.REACT_APP_BACKEND_URI}/signin`,\r\n        postData\r\n      );\r\n\r\n      dispatch(login(response.data));\r\n      dispatch(SUCCESSS());\r\n      return true;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        message.error(error.response.data.error);\r\n        dispatch(SUCCESSS());\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const socialLogin = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(LOADING());\r\n\r\n      const response = await Axios.post(\r\n        `${process.env.REACT_APP_BACKEND_URI}/social-login`,\r\n        data\r\n      );\r\n\r\n      dispatch(login(response.data));\r\n      dispatch(SUCCESSS());\r\n      return true;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        message.error(error.response.data.error);\r\n        dispatch(SUCCESSS());\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const forgetPassword = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await Axios.post(\r\n        `${process.env.REACT_APP_BACKEND_URI}/forget-password`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      notification[\"success\"]({\r\n        message: \"Reset Password\",\r\n        description: response.data.message,\r\n        duration: 0,\r\n        icon: <SmileOutlined style={{ color: \"#108ee9\" }} />,\r\n      });\r\n    } catch (error) {\r\n      message.warning(error.response.data.error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetPassword = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await Axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URI}/reset-password`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      notification[\"success\"]({\r\n        message: \"Reset Password\",\r\n        description: response.data.message,\r\n        duration: 0,\r\n        icon: <SmileOutlined style={{ color: \"#108ee9\" }} />,\r\n      });\r\n    } catch (error) {\r\n      message.warning(error.response.data.error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAuthUser = (_id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      dispatch(LOADING());\r\n      const response = await Axios.get(\r\n        `${process.env.REACT_APP_BACKEND_URI}/user/${_id}`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      dispatch(authUser(response.data));\r\n      dispatch(SUCCESSS());\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAuthorBooks = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(LOADING());\r\n      const response = await Axios.get(\r\n        `${process.env.REACT_APP_BACKEND_URI}/books/author/${data._id}`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${data.token}`,\r\n          },\r\n        }\r\n      );\r\n      //SUCCESS\r\n      dispatch(GET(response.data.books));\r\n      dispatch(SUCCESSS());\r\n    } catch (error) {\r\n      //ERROR\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBooks = () => {\r\n  return async (dispatch) => {\r\n    //LOADING\r\n    try {\r\n      //dispatch(LOADING());\r\n      const response = await Axios.get(\r\n        `${process.env.REACT_APP_BACKEND_URI}/books`\r\n      );\r\n      //SUCCESS\r\n      dispatch(GETALLBOOKS(response.data.books));\r\n    } catch (error) {\r\n      //ERROR\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBook = (_id) => {\r\n  return async (dispatch) => {\r\n    //LOADING\r\n    try {\r\n      //dispatch(LOADING());\r\n      const response = await Axios.get(\r\n        `${process.env.REACT_APP_BACKEND_URI}/books/${_id}`\r\n      );\r\n      //SUCCESS\r\n      dispatch(GETBOOK(response.data.book));\r\n    } catch (error) {\r\n      //ERROR\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCategories = () => {\r\n  return async (dispatch) => {\r\n    //LOADING\r\n    try {\r\n      dispatch(LOADING());\r\n      const response = await Axios.get(\r\n        `${process.env.REACT_APP_BACKEND_URI}/book/categories`\r\n      );\r\n      //SUCCESS\r\n      dispatch(GETALLCATEGORIES(response.data.categories));\r\n      dispatch(SUCCESSS());\r\n    } catch (error) {\r\n      //ERROR\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAuthors = () => {\r\n  return async (dispatch) => {\r\n    //LOADING\r\n    try {\r\n      dispatch(LOADING());\r\n      const response = await Axios.get(\r\n        `${process.env.REACT_APP_BACKEND_URI}/book/authors`\r\n      );\r\n      //SUCCESS\r\n      dispatch(GETAUTHORS(response.data.authors));\r\n      dispatch(SUCCESSS());\r\n    } catch (error) {\r\n      //ERROR\r\n    }\r\n  };\r\n};\r\n\r\nexport const insertData = (data, token, _id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      //SUCCESS\r\n      //dispatch(LOADING());\r\n      const response = await Axios.post(\r\n        `${process.env.REACT_APP_BACKEND_URI}/book/${_id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      dispatch(INSERT());\r\n      message.success(\"Book Added Successfully.\")\r\n      return true;\r\n    } catch (error) {\r\n      message.error(error.response.data.error);\r\n      //FAilure\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteData = (deleteId, _id, token) => {\r\n  //alert(\"delete : \" + deleteId + \"id: \" + _id);\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      const response = await Axios.delete(\r\n        `${process.env.REACT_APP_BACKEND_URI}/books/${deleteId}`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      dispatch(fetchAuthorBooks({ _id, token }));\r\n      message.warning(\"Record Deleted Successfully\");\r\n      return true;\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n      message.error(error.response.data.error);\r\n      return false;\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateData = (data, updateId, _id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      const book = await Axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URI}/books/${updateId}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch(fetchAuthorBooks({ _id, token }));\r\n      message.success(\"Data Updated Successfully\");\r\n      return true;\r\n\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n    }\r\n  };\r\n};\r\n\r\nexport const addComment = (data, _id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      const book = await Axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URI}/book/comment`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch(fetchBook(data.bookId));\r\n      return true;\r\n\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleLike = (data, _id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      const book = await Axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URI}/book/like`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch(fetchBook(data.bookId));\r\n      return true;\r\n\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleDislike = (data, _id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      const book = await Axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URI}/book/dislike`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch(fetchBook(data.bookId));\r\n      return true;\r\n\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleFavourite = (hasfavourite, data, _id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      const book = await Axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URI}/book/favourite`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      hasfavourite\r\n        ? message.warning(\"Book Removed From Favourite List\")\r\n        : message.success(\"Book Added to Favourite List\");\r\n\r\n      dispatch(fetchBook(data.bookId));\r\n      dispatch(fetchAuthUser(_id, token));\r\n      return true;\r\n\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleReadlater = (hasReadLater, data, _id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      const book = await Axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URI}/book/read-later`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      hasReadLater\r\n        ? message.warning(\"Book Removed From Read Later List\")\r\n        : message.success(\"Book Added To Read Later List\");\r\n\r\n      dispatch(fetchBook(data.bookId));\r\n      dispatch(fetchAuthUser(_id, token));\r\n      return true;\r\n\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n    }\r\n  };\r\n};\r\n\r\nexport const updatePlan = (data, _id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      const book = await Axios.post(\r\n        `${process.env.REACT_APP_BACKEND_URI}/plan/${_id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch(fetchAuthUser(_id, token));\r\n      return true;\r\n\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n    }\r\n  };\r\n};\r\n\r\nexport const insertCurrentRead = (data, _id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      //SUCCESS\r\n      //dispatch(LOADING());\r\n      const response = await Axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URI}/user/book/read`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.data.canRead) {\r\n        fetchAuthUser(_id, token);\r\n        return true;\r\n      } else {\r\n        message.warning(response.data.error);\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      //FAilure\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteCurrentRead = (deleteId, _id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //LOADING\r\n      const response = await Axios.delete(\r\n        `${process.env.REACT_APP_BACKEND_URI}/user/book/read/${deleteId}`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.data.isRemoved) {\r\n        dispatch(fetchAuthUser(_id, token));\r\n\r\n        message.success(response.data.successText);\r\n\r\n        return true;\r\n      } else {\r\n        message.warning(response.data.error);\r\n        return false;\r\n      }\r\n      //SUCCESS\r\n    } catch (error) {\r\n      //FAILURE\r\n    }\r\n  };\r\n};\r\n\r\n//Writer APIS\r\n\r\nexport const FetchMostLikedBooks = (_id, token) => {\r\n  return async (dispatch) => {\r\n    //LOADING\r\n    try {\r\n      dispatch(LOADING());\r\n      const response = await Axios.get(\r\n        `${process.env.REACT_APP_BACKEND_URI}/report/most-liked-book`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      //SUCCESS\r\n      dispatch(authUser(response.data));\r\n      dispatch(SUCCESSS());\r\n    } catch (error) {\r\n      //ERROR\r\n    }\r\n  };\r\n};\r\n\r\nexport const FetchMostReadBooks = (_id, token) => {\r\n  return async (dispatch) => {\r\n    //LOADING\r\n    try {\r\n      dispatch(LOADING());\r\n      const response = await Axios.get(\r\n        `${process.env.REACT_APP_BACKEND_URI}/report/most-read-book`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      //SUCCESS\r\n      dispatch(authUser(response.data));\r\n      dispatch(SUCCESSS());\r\n    } catch (error) {\r\n      //ERROR\r\n    }\r\n  };\r\n};\r\n","export const LOADING = () => {\r\n  return {\r\n    type: \"LOADING\",\r\n  };\r\n};\r\n\r\nexport const SUCCESSS = () => {\r\n  return {\r\n    type: \"SUCCESSS\",\r\n  };\r\n};\r\n","export const CLIENT_ID =\r\n  \"695572775899-6nhep0q0fumfqug1fi0ruj81o9ich1kg.apps.googleusercontent.com\";\r\n","import React from \"react\";\r\nimport { Steps, Button, Form, Input, Select, Result } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  CompassOutlined,\r\n  InfoCircleOutlined,\r\n  CheckCircleOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { signup, verifyAccount } from \"../../redux/ActionApi\";\r\n\r\nimport { CLIENT_ID } from \"../../redux/const\";\r\n\r\nconst { Step } = Steps;\r\nconst { Option } = Select;\r\n\r\nconst ActionButtons = ({ steps, current, next, prev }) => {\r\n  return (\r\n    <div className=\"steps-action\">\r\n      {current < steps.length - 1 && (\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={() => next()}>\r\n          Next\r\n        </Button>\r\n      )}\r\n      {current === steps.length - 1 && (\r\n        <Button type=\"primary\" onClick={() => alert(\"Processing complete!\")}>\r\n          Done\r\n        </Button>\r\n      )}\r\n      {current > 0 && (\r\n        <Button style={{ margin: \"0 8px\" }} onClick={() => prev()}>\r\n          Previous\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      current: 0,\r\n      registrationFields: [],\r\n      roleFields: [],\r\n      personalDetailsFields: [],\r\n      bookCategories: [],\r\n      verificationFields: [],\r\n      hasError: false,\r\n      resultStatus: \"info\",\r\n      userData: {},\r\n      googleData: {},\r\n    };\r\n\r\n    this.steps = [\r\n      {\r\n        title: \"Registration\",\r\n        content: \"Registration Form\",\r\n        icon: <UserOutlined />,\r\n      },\r\n      {\r\n        title: \"Role, Country\",\r\n        content: \"Choose Your Role\",\r\n        icon: <CompassOutlined />,\r\n      },\r\n      {\r\n        title: \"Personal Details\",\r\n        content: \"Enter Your Personal Details\",\r\n        icon: <InfoCircleOutlined />,\r\n      },\r\n      {\r\n        title: \"Verification\",\r\n        content: \"We have sent you verification code\",\r\n        icon: <CheckCircleOutlined />,\r\n      },\r\n    ];\r\n\r\n    this.layout = {\r\n      labelCol: {\r\n        span: 8,\r\n      },\r\n      wrapperCol: {\r\n        span: 8,\r\n      },\r\n    };\r\n\r\n    this.userData = {};\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const bookCategories = await Axios.get(\r\n      `${process.env.REACT_APP_BACKEND_URI}/book/categories`\r\n    );\r\n\r\n    this.setState({\r\n      bookCategories: bookCategories.data.categories,\r\n    });\r\n  }\r\n\r\n  handleRegistrationChange = (event) => {\r\n    this.setState({\r\n      registrationFields: event,\r\n    });\r\n  };\r\n\r\n  handleRoleChange = (event) => {\r\n    this.setState({\r\n      roleFields: event,\r\n    });\r\n  };\r\n\r\n  handlePersonalDetailsChange = (event) => {\r\n    this.setState({\r\n      personalDetailsFields: event,\r\n    });\r\n  };\r\n\r\n  next = () => {\r\n    var currentStep;\r\n    let hasError = false;\r\n\r\n    if (this.state.current === 0) {\r\n      if (this.state.registrationFields.length > 0) {\r\n        this.state.registrationFields.forEach((field) => {\r\n          if (field.errors.length > 0 || !field.touched) {\r\n            hasError = true;\r\n          }\r\n        });\r\n\r\n        if (!hasError) {\r\n          currentStep = this.state.current + 1;\r\n          this.setState({\r\n            current: currentStep,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.state.current === 1) {\r\n      if (this.state.roleFields.length > 0) {\r\n        this.state.roleFields.forEach((field) => {\r\n          if (field.errors.length > 0 || !field.touched) {\r\n            hasError = true;\r\n          }\r\n        });\r\n\r\n        if (!hasError) {\r\n          currentStep = this.state.current + 1;\r\n          this.setState({\r\n            current: currentStep,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.state.current === 2) {\r\n      if (this.state.personalDetailsFields.length > 0) {\r\n        this.state.personalDetailsFields.forEach((field) => {\r\n          if (field.errors.length > 0 || !field.touched) {\r\n            hasError = true;\r\n          }\r\n        });\r\n\r\n        if (!hasError) {\r\n          currentStep = this.state.current + 1;\r\n          this.setState({\r\n            current: currentStep,\r\n          });\r\n        }\r\n      }\r\n\r\n      if (!this.state.googleData.googleId) {\r\n        this.state.registrationFields.forEach((field) => {\r\n          this.userData[field.name[0]] = field.value;\r\n        });\r\n      } else {\r\n        this.userData.username = this.state.googleData.givenName;\r\n        this.userData.email = this.state.googleData.email;\r\n        this.userData.googleId = this.state.googleData.googleId;\r\n      }\r\n\r\n      this.state.roleFields.forEach((field) => {\r\n        this.userData[field.name[0]] = field.value;\r\n      });\r\n\r\n      this.state.personalDetailsFields.forEach((field) => {\r\n        this.userData[field.name[0]] = field.value;\r\n      });\r\n\r\n      console.log(\"userdata\", this.userData);\r\n      this.props.signupDispatch(this.userData);\r\n\r\n      this.setState({\r\n        userData: this.userData,\r\n      });\r\n      //Call\r\n    }\r\n  };\r\n\r\n  prev = () => {\r\n    const currentStep = this.state.current - 1;\r\n\r\n    this.setState({\r\n      current: currentStep,\r\n    });\r\n  };\r\n\r\n  handleVerifyAccountChange = (event) => {\r\n    this.setState({\r\n      verificationFields: event,\r\n    });\r\n  };\r\n\r\n  handleVerifyAccount = (event) => {\r\n    const data = {};\r\n\r\n    this.state.verificationFields.forEach((field) => {\r\n      data[field.name[0]] = field.value;\r\n      data.email = this.userData.email;\r\n    });\r\n\r\n    this.props.verificationDispatch(data);\r\n  };\r\n\r\n  responseGoogle = async (response) => {\r\n    console.log(\"Google\", response);\r\n    try {\r\n      if (response.googleId) {\r\n        /* dispatch(Login(response.profileObj));\r\n        props.history.push(\"/app/\"); */\r\n\r\n        //this.props.signupDispatch(response.profileObj);\r\n\r\n        this.setState({\r\n          googleData: response.profileObj,\r\n        });\r\n\r\n        const currentStep = this.state.current + 1;\r\n\r\n        this.setState({\r\n          current: currentStep,\r\n        });\r\n\r\n        /* const res = await dispatch(socialLogin(response.profileObj));\r\n\r\n        res && props.history.push(\"/\"); */\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Signup</h1>\r\n        <Steps current={this.state.current}>\r\n          {this.steps.map((step, index) => {\r\n            return <Step key={index} title={step.title} icon={step.icon} />;\r\n          })}\r\n        </Steps>\r\n\r\n        <div className=\"steps-content\">\r\n          {this.state.current === 0 && (\r\n            <Form\r\n              {...this.layout}\r\n              form={this.form}\r\n              name=\"basic\"\r\n              layout=\"vertical\"\r\n              onFieldsChange={(changedFields, allFields) => {\r\n                this.handleRegistrationChange(allFields);\r\n              }}\r\n            >\r\n              <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your username!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your email!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your password!\",\r\n                  },\r\n                  {\r\n                    min: 6,\r\n                    message: \"Min. 6 character required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Confirm Password\"\r\n                name=\"passwordConfirmation\"\r\n                dependencies={[\"password\"]}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input confirm password!\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (!value || getFieldValue(\"password\") === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        \"The two passwords that you entered do not match!\"\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <GoogleLogin\r\n                  clientId={CLIENT_ID}\r\n                  buttonText=\"Signup With Goodle\"\r\n                  onSuccess={this.responseGoogle}\r\n                  onFailure={this.responseGoogle}\r\n                  cookiePolicy={\"single_host_origin\"}\r\n                />\r\n              </Form.Item>\r\n\r\n              <ActionButtons\r\n                steps={this.steps}\r\n                current={this.state.current}\r\n                next={this.next}\r\n                prev={this.prev}\r\n              />\r\n            </Form>\r\n          )}\r\n\r\n          {this.state.current === 1 && (\r\n            <Form\r\n              {...this.layout}\r\n              name=\"basic\"\r\n              layout=\"vertical\"\r\n              onFieldsChange={(changedFields, allFields) => {\r\n                this.handleRoleChange(allFields);\r\n              }}\r\n            >\r\n              <Form.Item name=\"role\" label=\"Role\" rules={[{ required: true }]}>\r\n                <Select placeholder=\"Select Role\" allowClear>\r\n                  <Option value=\"reader\">Reader</Option>\r\n                  <Option value=\"writer\">Writer</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"country\"\r\n                label=\"Country\"\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Select placeholder=\"Select Country\" allowClear>\r\n                  <Option value=\"india\">India</Option>\r\n                  <Option value=\"canada\">Canada</Option>\r\n                  <Option value=\"usa\">USA</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <ActionButtons\r\n                steps={this.steps}\r\n                current={this.state.current}\r\n                next={this.next}\r\n                prev={this.prev}\r\n              />\r\n            </Form>\r\n          )}\r\n\r\n          {this.state.current === 2 && (\r\n            <Form\r\n              {...this.layout}\r\n              name=\"basic\"\r\n              layout=\"vertical\"\r\n              onFieldsChange={(changedFields, allFields) => {\r\n                this.handlePersonalDetailsChange(allFields);\r\n              }}\r\n            >\r\n              <Form.Item\r\n                label=\"Firstname\"\r\n                name=\"firstname\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your firstname!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Lastname\"\r\n                name=\"lastname\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your lastname!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"intrest\"\r\n                label=\"Intrest\"\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Select placeholder=\"Select your books of interest\" allowClear>\r\n                  {this.state.bookCategories.map((category) => {\r\n                    return (\r\n                      <Option value={category._id}>{category.name}</Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <ActionButtons\r\n                steps={this.steps}\r\n                current={this.state.current}\r\n                next={this.next}\r\n                prev={this.prev}\r\n              />\r\n            </Form>\r\n          )}\r\n\r\n          {this.state.current === 3 && (\r\n            <Result\r\n              status={\r\n                this.props.data && this.props.data.isVerified\r\n                  ? \"success\"\r\n                  : \"info\"\r\n              }\r\n              title={\r\n                this.props.data && this.props.data.isVerified\r\n                  ? \"Account Verified Successfully\"\r\n                  : \"Please Check Your Email For Further Instructions!\"\r\n              }\r\n              subTitle={\r\n                this.props.data && this.props.data.isVerified\r\n                  ? \"Please Login With Your Credentials\"\r\n                  : \"We have sent you 6-digit verification code Please Check Your Email.\"\r\n              }\r\n              extra={\r\n                this.props.data && this.props.data.isVerified\r\n                  ? [\r\n                      <Button\r\n                        type=\"dashed\"\r\n                        key=\"console\"\r\n                        onClick={() => this.props.history.push(\"/signin\")}\r\n                      >\r\n                        Login\r\n                      </Button>,\r\n                    ]\r\n                  : [\r\n                      <Form\r\n                        labelCol={{ span: 4 }}\r\n                        wrapperCol={{\r\n                          span: 4,\r\n                        }}\r\n                        name=\"basic\"\r\n                        layout=\"vertical\"\r\n                        onFieldsChange={(changedFields, allFields) => {\r\n                          this.handleVerifyAccountChange(changedFields);\r\n                        }}\r\n                      >\r\n                        <Form.Item\r\n                          label=\"Verification Code\"\r\n                          name=\"passcode\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Please input verification code!\",\r\n                            },\r\n                          ]}\r\n                          style={{ alignItems: \"center\" }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Form>,\r\n                      <Button\r\n                        type=\"primary\"\r\n                        key=\"console\"\r\n                        onClick={this.handleVerifyAccount}\r\n                      >\r\n                        Verify\r\n                      </Button>,\r\n                      <Button key=\"buy\">Send Again</Button>,\r\n                    ]\r\n              }\r\n            />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signupDispatch: (postData) => dispatch(signup(postData)),\r\n    verificationDispatch: (postData) => dispatch(verifyAccount(postData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { signin, socialLogin } from \"../../redux/ActionApi\";\r\nimport { CLIENT_ID } from \"../../redux/const\";\r\n\r\nconst Signin = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const globalState = useSelector((state) => state.global);\r\n\r\n  const onHandleSubmit = async (values) => {\r\n    try {\r\n      const response = await dispatch(signin(values));\r\n      response && props.history.push(\"/\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  const responseGoogle = async (response) => {\r\n    console.log(\"Google\", response);\r\n    try {\r\n      if (response.googleId) {\r\n        /* dispatch(Login(response.profileObj));\r\n        props.history.push(\"/app/\"); */\r\n\r\n        const res = await dispatch(socialLogin(response.profileObj));\r\n\r\n        res && props.history.push(\"/\");\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Signin</h1>\r\n\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onHandleSubmit}\r\n        {...layout}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email / Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n        >\r\n          <Input.Password\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {/* <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item> */}\r\n\r\n          <Link className=\"login-form-forgot\" to=\"/forget-password\">\r\n            Forgot password\r\n          </Link>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <GoogleLogin\r\n            clientId={CLIENT_ID}\r\n            buttonText=\"Login With Goodle\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n            loading={globalState.loading}\r\n          >\r\n            Log in\r\n          </Button>\r\n          Or <Link to=\"/signup\">register now!</Link>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\n/* const mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signinDispatch: (postData) => dispatch(signin(postData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Signin));\r\n */\r\n\r\nexport default withRouter(Signin);\r\n","import React from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nimport { forgetPassword } from \"../../redux\";\r\n\r\nconst ForgetPassword = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n\r\n    dispatch(forgetPassword(values));\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Forget Password</h1>\r\n\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        {...layout}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          extra=\"Enter your email address above and we will send you instructions on how to reset your password.\"\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email / Username\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","import React from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nimport { resetPassword } from \"../../redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ResetPassword = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const resetPasswordToken = props.match.params.token;\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n\r\n    dispatch(resetPassword({ password: values.password, resetPasswordToken }));\r\n  };\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Reset Password</h1>\r\n\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        {...layout}\r\n        layout=\"vertical\"\r\n      >\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input password\",\r\n            },\r\n            {\r\n              min: 6,\r\n              message: \"Min. 6 character required\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Confirm Password\"\r\n          name=\"passwordConfirmation\"\r\n          dependencies={[\"password\"]}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input confirm password\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(\r\n                  \"The two passwords that you entered do not match!\"\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default withRouter(ResetPassword);\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Card, Layout, Statistic, Skeleton, Empty } from \"antd\";\r\nimport { LikeTwoTone, DislikeTwoTone, BookTwoTone } from \"@ant-design/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { FetchMostLikedBooks, FetchMostReadBooks } from \"../../redux/ActionApi\";\r\n\r\nconst Dashboard = (props) => {\r\n  const { Content } = Layout;\r\n\r\n  const isLoggedIn = window.localStorage.getItem(\"authUser\") ? true : false;\r\n\r\n  !isLoggedIn && props.history.push(\"/signin\");\r\n\r\n  const dispatch = useDispatch();\r\n  const authUser = useSelector((state) => state.authUser.authUser);\r\n\r\n  const globalState = useSelector((state) => state.global);\r\n\r\n  const mostLikedBooks = useSelector(\r\n    (state) => state.authUser.user.mostLikedBooks\r\n  );\r\n\r\n  const mostReadBooks = useSelector(\r\n    (state) => state.authUser.user.mostReadBooks\r\n  );\r\n\r\n  console.log(\"favourite books\", mostReadBooks);\r\n\r\n  useEffect(() => {\r\n    dispatch(FetchMostLikedBooks(authUser._id, authUser.token));\r\n    dispatch(FetchMostReadBooks(authUser._id, authUser.token));\r\n  }, []);\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"site-card-wrapper\">\r\n        <h1>Top 3 Liked Books</h1>\r\n        <Row gutter={[16, 16]}>\r\n          {globalState.loading && <Skeleton active />}\r\n\r\n          {mostLikedBooks && mostLikedBooks.length <= 0 && (\r\n            <Empty\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              imageStyle={{\r\n                height: 100,\r\n              }}\r\n              description={\r\n                <span>Currently your books are haven't read by anyone...</span>\r\n              }\r\n            ></Empty>\r\n          )}\r\n\r\n          {!globalState.loading &&\r\n            mostLikedBooks &&\r\n            mostLikedBooks.length > 0 &&\r\n            mostLikedBooks.map((book) => {\r\n              return (\r\n                <Col xs={24} md={8}>\r\n                  <Card\r\n                    title={book._id.title}\r\n                    bordered={true}\r\n                    cover={\r\n                      <img\r\n                        alt=\"example\"\r\n                        src={book._id.photo}\r\n                        onError={(e) =>\r\n                          (e.target.src =\r\n                            \"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\")\r\n                        }\r\n                        style={{ height: \"200px\", objectFit: \"contain\" }}\r\n                      />\r\n                    }\r\n                  >\r\n                    <p>{book._id.description}</p>\r\n                    <Row gutter={24}>\r\n                      <Col span={8}>\r\n                        <Statistic\r\n                          title=\"Read\"\r\n                          value={book._id.numberOfRead.length}\r\n                          prefix={<BookTwoTone />}\r\n                        />\r\n                      </Col>\r\n                      <Col span={8}>\r\n                        <Statistic\r\n                          title=\"Like\"\r\n                          value={book.count}\r\n                          prefix={<LikeTwoTone />}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col span={8}>\r\n                        <Statistic\r\n                          title=\"Dislike\"\r\n                          value={book._id.dislikes.length}\r\n                          prefix={<DislikeTwoTone />}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n      </div>\r\n      <div className=\"site-card-wrapper\">\r\n        <h1>Top 3 Reading Books</h1>\r\n        <Row gutter={[16, 16]}>\r\n          {globalState.loading && <Skeleton active />}\r\n\r\n          {mostReadBooks && mostReadBooks.length <= 0 && (\r\n            <Empty\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              imageStyle={{\r\n                height: 100,\r\n              }}\r\n              description={\r\n                <span>Currently your books are haven't read by anyone...</span>\r\n              }\r\n            ></Empty>\r\n          )}\r\n\r\n          {!globalState.loading &&\r\n            mostReadBooks &&\r\n            mostReadBooks.length > 0 &&\r\n            mostReadBooks.map((book) => {\r\n              return (\r\n                <Col xs={24} md={8}>\r\n                  <Card\r\n                    title={book._id.title}\r\n                    bordered={true}\r\n                    cover={\r\n                      <img\r\n                        alt=\"example\"\r\n                        src={book._id.photo}\r\n                        onError={(e) =>\r\n                          (e.target.src =\r\n                            \"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\")\r\n                        }\r\n                        style={{ height: \"200px\", objectFit: \"contain\" }}\r\n                      />\r\n                    }\r\n                  >\r\n                    <p>Cosos Theory</p>\r\n                    <Row gutter={24}>\r\n                      <Col span={8}>\r\n                        <Statistic\r\n                          title=\"Read\"\r\n                          value={book.count}\r\n                          prefix={<BookTwoTone />}\r\n                        />\r\n                      </Col>\r\n                      <Col span={8}>\r\n                        <Statistic\r\n                          title=\"Like\"\r\n                          value={book._id.likes.length}\r\n                          prefix={<LikeTwoTone />}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col span={8}>\r\n                        <Statistic\r\n                          title=\"Dislike\"\r\n                          value={book._id.dislikes.length}\r\n                          prefix={<DislikeTwoTone />}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default withRouter(Dashboard);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Layout,\r\n  Popconfirm,\r\n  Empty,\r\n  Button,\r\n  message,\r\n  Skeleton,\r\n} from \"antd\";\r\nimport {\r\n  LikeTwoTone,\r\n  DislikeTwoTone,\r\n  BookTwoTone,\r\n  LikeOutlined,\r\n  CloseCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport {\r\n  fetchAuthUser,\r\n  insertCurrentRead,\r\n  deleteCurrentRead,\r\n} from \"../../redux/ActionApi\";\r\n\r\nimport { SETBOOKTOREAD } from \"../../redux/actions/BookActions\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst Dashboard = (props) => {\r\n  const { Content } = Layout;\r\n\r\n  const isLoggedIn = window.localStorage.getItem(\"authUser\") ? true : false;\r\n\r\n  /* !isLoggedIn && props.history.push(\"/signin\"); */\r\n  const dispatch = useDispatch();\r\n\r\n  const authUser = useSelector((state) => state.authUser.authUser);\r\n\r\n  const user = useSelector((state) => state.authUser.user);\r\n\r\n  const globalState = useSelector((state) => state.global);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAuthUser(authUser._id, authUser.token));\r\n  }, [authUser]);\r\n\r\n  if (user) {\r\n    if (!user.plan && user._id) {\r\n      props.history.push(\"/plans\");\r\n    }\r\n  }\r\n\r\n  const favouriteBooks = useSelector(\r\n    (state) => state.authUser.user.favouriteBook\r\n  );\r\n\r\n  var ReadlaterBooks = useSelector(\r\n    (state) => state.authUser.user.bookToReadLater\r\n  );\r\n\r\n  if (ReadlaterBooks && ReadlaterBooks.length > 3) {\r\n    const shuffled = ReadlaterBooks.sort(() => 0.5 - Math.random());\r\n    ReadlaterBooks = shuffled.slice(0, 3);\r\n  }\r\n\r\n  const currentReading = useSelector(\r\n    (state) => state.authUser.user.currentReading\r\n  );\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n\r\n  const handleBookView = (_id) => {\r\n    props.history.push(`/book/${_id}`);\r\n  };\r\n\r\n  const handleBookRead = async (_id, url) => {\r\n    //dispatch(SETBOOKTOREAD({ _id, url }));\r\n    const response = await dispatch(\r\n      insertCurrentRead({ bookId: _id, url }, authUser._id, authUser.token)\r\n    );\r\n\r\n    if (response) {\r\n      response && dispatch(SETBOOKTOREAD({ _id, url }));\r\n\r\n      setTimeout(() => props.history.push(\"/book/view\"), 300);\r\n    }\r\n  };\r\n\r\n  const handleContinueBookRemove = (_id) => {\r\n    dispatch(deleteCurrentRead(_id, authUser._id, authUser.token));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"site-card-wrapper\">\r\n        <h1>Contiue Reading...</h1>\r\n        {globalState.loading && <Skeleton active />}\r\n\r\n        {currentReading && currentReading.length <= 0 && (\r\n          <Empty\r\n            style={{ margin: \"auto\" }}\r\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            imageStyle={{\r\n              height: 100,\r\n            }}\r\n            description={<span>Search book here...</span>}\r\n          >\r\n            <Button type=\"dashed\" onClick={() => props.history.push(\"/search\")}>\r\n              Find Books\r\n            </Button>\r\n          </Empty>\r\n        )}\r\n        <Row gutter={[16, 16]}>\r\n          {!globalState.loading &&\r\n            currentReading &&\r\n            currentReading.length > 0 &&\r\n            currentReading.map((book, index) => {\r\n              return (\r\n                index <= 2 && (\r\n                  <Col xs={24} md={8}>\r\n                    <Card\r\n                      bordered={true}\r\n                      title={book.book.title}\r\n                      cover={\r\n                        <Popconfirm\r\n                          title=\"Do you want to read?\"\r\n                          onConfirm={() =>\r\n                            handleBookRead(book.book._id, book.book.reference)\r\n                          }\r\n                          onCancel={() => 1}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                        >\r\n                          <img\r\n                            alt=\"example\"\r\n                            src={book.book.photo}\r\n                            onError={(e) =>\r\n                              (e.target.src =\r\n                                \"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\")\r\n                            }\r\n                            style={{ height: \"200px\", objectFit: \"contain\" }}\r\n                          />\r\n                        </Popconfirm>\r\n                      }\r\n                    >\r\n                      <Row gutter={24}>\r\n                        <Col span={18}>\r\n                          <p>{book.book.description}</p>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                          <InfoCircleOutlined\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => handleBookView(book.book._id)}\r\n                          />\r\n                        </Col>\r\n                        <Col span={2}>\r\n                          <Popconfirm\r\n                            title=\"Do you want to remove from this list?\"\r\n                            onConfirm={() =>\r\n                              handleContinueBookRemove(book.book._id)\r\n                            }\r\n                            onCancel={() => 1}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                          >\r\n                            <CloseCircleOutlined\r\n                              style={{ cursor: \"pointer\" }}\r\n                            />\r\n                          </Popconfirm>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                )\r\n              );\r\n            })}\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"site-card-wrapper\">\r\n        <h1>Favourite Books</h1>\r\n        {globalState.loading && <Skeleton active />}\r\n\r\n        {favouriteBooks && favouriteBooks.length <= 0 && (\r\n          <Empty\r\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            imageStyle={{\r\n              height: 100,\r\n            }}\r\n            description={<span>Search book here...</span>}\r\n          >\r\n            <Button type=\"dashed\" onClick={() => props.history.push(\"/search\")}>\r\n              Find Books\r\n            </Button>\r\n          </Empty>\r\n        )}\r\n        <Row gutter={[16, 16]}>\r\n          {!globalState.loading &&\r\n            favouriteBooks &&\r\n            favouriteBooks.map((book, index) => {\r\n              return (\r\n                index <= 2 && (\r\n                  <Col xs={24} md={8}>\r\n                    <Card\r\n                      bordered={true}\r\n                      title={\r\n                        book.book.title.charAt(0).toUpperCase() +\r\n                        book.book.title.slice(1)\r\n                      }\r\n                      cover={\r\n                        <Popconfirm\r\n                          title=\"Do you want to read?\"\r\n                          onConfirm={() =>\r\n                            handleBookRead(book.book._id, book.book.reference)\r\n                          }\r\n                          onCancel={() => 1}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                        >\r\n                          <img\r\n                            alt=\"example\"\r\n                            src={book.book.photo}\r\n                            onError={(e) =>\r\n                              (e.target.src =\r\n                                \"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\")\r\n                            }\r\n                            style={{ height: \"200px\", objectFit: \"contain\" }}\r\n                          />\r\n                        </Popconfirm>\r\n                        /*  <img\r\n                          alt=\"example\"\r\n                          src={book.book.photo}\r\n                          onError={(e) =>\r\n                            (e.target.src =\r\n                              \"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\")\r\n                          }\r\n                          style={{ height: \"200px\", objectFit: \"contain\" }}\r\n                        /> */\r\n                      }\r\n                    >\r\n                      <Row gutter={24}>\r\n                        <Col span={20}>\r\n                          <p>\r\n                            {book.book.description.charAt(0).toUpperCase() +\r\n                              book.book.description.slice(1)}\r\n                          </p>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                          <InfoCircleOutlined\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => handleBookView(book.book._id)}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                )\r\n              );\r\n            })}\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"site-card-wrapper\">\r\n        <h1>Later Read Book List</h1>\r\n        {globalState.loading && <Skeleton active />}\r\n\r\n        {ReadlaterBooks && ReadlaterBooks.length <= 0 && (\r\n          <Empty\r\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            imageStyle={{\r\n              height: 100,\r\n            }}\r\n            description={<span>Search book here...</span>}\r\n          >\r\n            <Button type=\"dashed\" onClick={() => props.history.push(\"/search\")}>\r\n              Find Books\r\n            </Button>\r\n          </Empty>\r\n        )}\r\n        <Row gutter={[16, 16]}>\r\n          {!globalState.loading &&\r\n            ReadlaterBooks &&\r\n            ReadlaterBooks.length >= 0 &&\r\n            ReadlaterBooks.map((book) => {\r\n              return (\r\n                <Col xs={24} md={8}>\r\n                  <Card\r\n                    bordered={true}\r\n                    title={\r\n                      book.title.charAt(0).toUpperCase() + book.title.slice(1)\r\n                    }\r\n                    cover={\r\n                      <Popconfirm\r\n                        title=\"Do you want to read?\"\r\n                        onConfirm={() =>\r\n                          handleBookRead(book._id, book.reference)\r\n                        }\r\n                        onCancel={() => 1}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                      >\r\n                        <img\r\n                          alt=\"example\"\r\n                          src={book.photo}\r\n                          onError={(e) =>\r\n                            (e.target.src =\r\n                              \"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\")\r\n                          }\r\n                          style={{ height: \"200px\", objectFit: \"contain\" }}\r\n                        />\r\n                      </Popconfirm>\r\n                    }\r\n                  >\r\n                    <Row gutter={24}>\r\n                      <Col span={20}>\r\n                        <p>\r\n                          {book.description.charAt(0).toUpperCase() +\r\n                            book.description.slice(1)}\r\n                        </p>\r\n                      </Col>\r\n                      <Col span={4}>\r\n                        <InfoCircleOutlined\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={() => handleBookView(book._id)}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Dashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  PageHeader,\r\n  Button,\r\n  Popconfirm,\r\n  Skeleton,\r\n  Empty,\r\n} from \"antd\";\r\nimport {\r\n  EyeOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EyeInvisibleOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  fetchAuthorBooks,\r\n  deleteData,\r\n  updateData,\r\n} from \"../../redux/ActionApi\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst MyBooks = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isViewed, setIsViewed] = useState(false);\r\n\r\n  const globalState = useSelector((state) => state.global);\r\n\r\n  const authUser = useSelector((state) => state.authUser.authUser);\r\n\r\n  const books = useSelector((state) => state.books.books);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAuthorBooks(authUser));\r\n  }, []);\r\n\r\n  const handleDelete = (_id) => {\r\n    dispatch(deleteData(_id, authUser._id, authUser.token));\r\n  };\r\n\r\n  const handleEdit = (_id) => {\r\n    props.history.push(`/edit-book/${_id}`);\r\n  };\r\n\r\n  const handlePrivacy = (_id, status) => {\r\n    dispatch(\r\n      updateData({ status: !status }, _id, authUser._id, authUser.token)\r\n    );\r\n  };\r\n\r\n  const handleBookView = (url) => {\r\n    //props.history.push(`/book/view`);\r\n    setIsViewed(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"site-page-header-ghost-wrapper\">\r\n        <PageHeader\r\n          ghost={false}\r\n          title=\"My Books\"\r\n          onBack={() => window.history.back()}\r\n          extra={[\r\n            <Button\r\n              key=\"1\"\r\n              type=\"primary\"\r\n              onClick={() => props.history.push(\"/add-book\")}\r\n            >\r\n              Add Book\r\n            </Button>,\r\n          ]}\r\n        ></PageHeader>\r\n      </div>\r\n      {isViewed ? (\r\n        <ViewBook />\r\n      ) : (\r\n        <Row gutter={[16, 16]}>\r\n          {/*  {props.books.loading && (\r\n          <Col xs={24} md={4}>\r\n            <Card loading>\r\n              <Meta\r\n                avatar={\r\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                }\r\n                title=\"Card title\"\r\n                description=\"This is the description\"\r\n              />\r\n            </Card>\r\n          </Col>\r\n        )} */}\r\n          {globalState.loading && <Skeleton active />}\r\n\r\n          {books && books.length <= 0 && (\r\n            <Empty\r\n              style={{ margin: \"auto\" }}\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              imageStyle={{\r\n                height: 100,\r\n              }}\r\n              description={<span>You haven't added any book yet...</span>}\r\n            ></Empty>\r\n          )}\r\n\r\n          {!globalState.loading &&\r\n            books &&\r\n            books.length > 0 &&\r\n            books.map((book) => {\r\n              return (\r\n                <Col xs={24} md={4}>\r\n                  <Card\r\n                    title={\r\n                      book.title.charAt(0).toUpperCase() + book.title.slice(1)\r\n                    }\r\n                    bordered={false}\r\n                    cover={\r\n                      <Popconfirm\r\n                        title=\"Do you want to read？\"\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        onConfirm={() => handleBookView(book.reference)}\r\n                      >\r\n                        <img\r\n                          alt=\"example\"\r\n                          src={book.photo}\r\n                          onError={(e) =>\r\n                            (e.target.src =\r\n                              \"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\")\r\n                          }\r\n                          style={{ height: \"200px\", objectFit: \"contain\" }}\r\n                        />\r\n                      </Popconfirm>\r\n                    }\r\n                    actions={[\r\n                      <EditOutlined\r\n                        key=\"edit\"\r\n                        onClick={() => handleEdit(book._id)}\r\n                      />,\r\n                      <Popconfirm\r\n                        title=\"Are you sure？\"\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        onConfirm={() => handleDelete(book._id)}\r\n                      >\r\n                        <DeleteOutlined key=\"delete\" />\r\n                      </Popconfirm>,\r\n                      <Popconfirm\r\n                        title={\r\n                          book.status\r\n                            ? \"Wanna private this book?\"\r\n                            : \"Wanna public this book\"\r\n                        }\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        onConfirm={() => handlePrivacy(book._id, book.status)}\r\n                      >\r\n                        {book.status ? (\r\n                          <EyeOutlined />\r\n                        ) : (\r\n                          <EyeInvisibleOutlined />\r\n                        )}\r\n                      </Popconfirm>,\r\n                    ]}\r\n                  >\r\n                    {book.description.charAt(0).toUpperCase() +\r\n                      book.description.slice(1)}\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ViewBook = () => {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Document\r\n        file=\"http://localhost:5431/upload/Arpil-Report (Saiyad zaid 92).pdf\"\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n      >\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n      <p>\r\n        Page {pageNumber} of {numPages}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default MyBooks;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Rate,\r\n  Avatar,\r\n  Comment,\r\n  Tooltip,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Statistic,\r\n} from \"antd\";\r\nimport {\r\n  LikeOutlined,\r\n  LikeFilled,\r\n  DislikeFilled,\r\n  DislikeOutlined,\r\n  HeartOutlined,\r\n  ReadOutlined,\r\n  ReadFilled,\r\n  HeartFilled,\r\n  SmileOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  fetchBook,\r\n  addComment,\r\n  toggleLike,\r\n  toggleDislike,\r\n  toggleFavourite,\r\n  toggleReadlater,\r\n  fetchAuthUser,\r\n} from \"../../redux/ActionApi\";\r\n\r\nconst { TextArea } = Input;\r\nconst desc = [\"terrible\", \"bad\", \"normal\", \"good\", \"wonderful\"];\r\n\r\nconst Editor = ({\r\n  onChange,\r\n  onSubmit,\r\n  submitting,\r\n  value,\r\n  rateValue,\r\n  onRateChange,\r\n  hasRated,\r\n}) => (\r\n  <Form onFinish={onSubmit}>\r\n    {!hasRated && (\r\n      <Form.Item>\r\n        <span>Rate :</span>\r\n        <Rate\r\n          defaultValue={rateValue}\r\n          tooltips={desc}\r\n          character={<SmileOutlined />}\r\n          onChange={onRateChange}\r\n        />\r\n      </Form.Item>\r\n    )}\r\n\r\n    <Form.Item\r\n      name=\"comment\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Please input Comment.\",\r\n        },\r\n      ]}\r\n    >\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button htmlType=\"submit\" loading={submitting} type=\"primary\">\r\n        Add Comment\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n);\r\n\r\nconst action = \"liked\";\r\n\r\nconst Book = (props) => {\r\n  const book = useSelector((state) => state.books.book);\r\n  const authUser = useSelector((state) => state.authUser.authUser);\r\n  const user = useSelector((state) => state.authUser.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [comment, setComment] = useState(null);\r\n  const [rate, setRate] = useState(5);\r\n\r\n  var hasLiked = false,\r\n    hasDisliked = false,\r\n    hasFavourite = false,\r\n    hasReadLater = false,\r\n    hasRated = false;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBook(props.match.params.bookId));\r\n    dispatch(fetchAuthUser(authUser._id, authUser.token));\r\n  },[]);\r\n\r\n  if (book.likes && book.likes.length > 0) {\r\n    const index = book.likes.findIndex((value) => {\r\n      return value._id === authUser._id;\r\n    });\r\n    index !== -1 && (hasLiked = true);\r\n  }\r\n\r\n  if (book.dislikes && book.dislikes.length > 0) {\r\n    const index = book.dislikes.findIndex((value) => {\r\n      return value._id === authUser._id;\r\n    });\r\n    index !== -1 && (hasDisliked = true);\r\n  }\r\n\r\n  if (user.favouriteBook && user.favouriteBook.length > 0) {\r\n    const index = user.favouriteBook.findIndex((value) => {\r\n      return value.book._id === book._id;\r\n    });\r\n    index !== -1 && (hasFavourite = true);\r\n  }\r\n\r\n  if (user.bookToReadLater && user.bookToReadLater.length > 0) {\r\n    const index = user.bookToReadLater.findIndex((value) => {\r\n      return value._id === book._id;\r\n    });\r\n    index !== -1 && (hasReadLater = true);\r\n  }\r\n\r\n  if (book.ratings && book.ratings.length > 0) {\r\n    const index = book.ratings.findIndex((value) => {\r\n      return value.user === authUser._id;\r\n    });\r\n    index !== -1 && (hasRated = true);\r\n  }\r\n\r\n  const onhandleComment = () => {\r\n    const commentData = {\r\n      bookId: book._id,\r\n      comment: comment,\r\n      ratings: rate,\r\n    };\r\n\r\n    dispatch(addComment(commentData, authUser._id, authUser.token));\r\n\r\n    setComment(\"\");\r\n  };\r\n\r\n  const onHandleInputComment = (event) => {\r\n    setComment(event.target.value);\r\n  };\r\n\r\n  const handleLike = (event) => {\r\n    dispatch(toggleLike({ bookId: book._id }, authUser._id, authUser.token));\r\n  };\r\n\r\n  const handleDislike = (event) => {\r\n    dispatch(toggleDislike({ bookId: book._id }, authUser._id, authUser.token));\r\n  };\r\n\r\n  const handleFavourite = (event) => {\r\n    dispatch(\r\n      toggleFavourite(\r\n        hasFavourite,\r\n        { bookId: book._id },\r\n        authUser._id,\r\n        authUser.token\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleReadlater = (event) => {\r\n    dispatch(\r\n      toggleReadlater(\r\n        hasReadLater,\r\n        { bookId: book._id },\r\n        authUser._id,\r\n        authUser.token\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleRateChange = (value) => {\r\n    setRate(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        title={book.title}\r\n        bordered={false}\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src={book.photo}\r\n            onError={(e) =>\r\n              (e.target.src =\r\n                \"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\")\r\n            }\r\n            style={{ height: \"200px\", objectFit: \"contain\" }}\r\n          />\r\n        }\r\n        actions={[\r\n          <Statistic\r\n            value={book.likes && book.likes.length}\r\n            valueStyle={{ fontSize: \"1rem\" }}\r\n            prefix={\r\n              hasLiked ? (\r\n                <LikeFilled\r\n                  style={{ fontSize: \"1rem\" /* color: \"#08c\"  */ }}\r\n                  onClick={handleLike}\r\n                />\r\n              ) : (\r\n                <LikeOutlined\r\n                  style={{ fontSize: \"1rem\" /* color: \"#08c\"  */ }}\r\n                  onClick={handleLike}\r\n                />\r\n              )\r\n            }\r\n          />,\r\n          <Statistic\r\n            value={book.dislikes && book.dislikes.length}\r\n            valueStyle={{ fontSize: \"1rem\" }}\r\n            prefix={\r\n              hasDisliked ? (\r\n                <DislikeFilled\r\n                  style={{ fontSize: \"1rem\" /* color: \"#08c\"  */ }}\r\n                  onClick={handleDislike}\r\n                />\r\n              ) : (\r\n                <DislikeOutlined\r\n                  style={{ fontSize: \"1rem\" /* color: \"#08c\"  */ }}\r\n                  onClick={handleDislike}\r\n                />\r\n              )\r\n            }\r\n          />,\r\n          hasReadLater ? (\r\n            <ReadFilled key=\"edit\" onClick={handleReadlater} />\r\n          ) : (\r\n            <ReadOutlined key=\"edit\" onClick={handleReadlater} />\r\n          ),\r\n          hasFavourite ? (\r\n            <HeartFilled key=\"edit\" onClick={handleFavourite} />\r\n          ) : (\r\n            <HeartOutlined key=\"edit\" onClick={handleFavourite} />\r\n          ),\r\n        ]}\r\n      >\r\n        {book.description}\r\n      </Card>\r\n      {book.comments &&\r\n        book.comments.map((comment, index) => {\r\n          return (\r\n            <Comment\r\n              key={index}\r\n              author={\r\n                <Link>\r\n                  {comment.postedBy.username === authUser.username && \"you\"}\r\n                </Link>\r\n              }\r\n              avatar={\r\n                <Avatar\r\n                  src=\"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\"\r\n                  alt=\"Han Solo\"\r\n                />\r\n              }\r\n              content={<p>{comment.text}</p>}\r\n              datetime={\r\n                <>\r\n                  <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n                    <span>{moment(comment.created).fromNow()}</span>\r\n                  </Tooltip>\r\n                  <Rate\r\n                    disabled\r\n                    character={<SmileOutlined />}\r\n                    defaultValue={\r\n                      book.ratings &&\r\n                      book.ratings[index] &&\r\n                      book.ratings[index].rate\r\n                    }\r\n                  />\r\n                </>\r\n              }\r\n            />\r\n          );\r\n        })}\r\n\r\n      <Comment\r\n        avatar={\r\n          <Avatar\r\n            src=\"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\"\r\n            alt=\"Han Solo\"\r\n          />\r\n        }\r\n        content={\r\n          <Editor\r\n            submitting=\"\"\r\n            value={comment}\r\n            rateValue={rate}\r\n            onSubmit={onhandleComment}\r\n            onChange={onHandleInputComment}\r\n            onRateChange={handleRateChange}\r\n            hasRated={hasRated}\r\n          />\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { insertData, fetchCategories } from \"../../redux/ActionApi\";\r\n\r\nimport {\r\n  PageHeader,\r\n  Button,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  Select,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\n\r\nconst Add = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories());\r\n  }, []);\r\n\r\n  const authUser = useSelector((state) => state.authUser.authUser);\r\n\r\n  const categories = useSelector((state) => state.books.categories);\r\n\r\n  const [reference, setReference] = useState(\"\");\r\n  const [photo, setPhoto] = useState(\"\");\r\n\r\n  const { Dragger } = Upload;\r\n\r\n  const referenceProps = {\r\n    name: \"reference\",\r\n    multiple: true,\r\n    action: `${process.env.REACT_APP_BACKEND_URI}/upload`,\r\n    onChange(info) {\r\n      const { status, response } = info.file;\r\n\r\n      if (status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === \"done\" && response.isUploaded) {\r\n        setReference(response.public_uri);\r\n\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  const photoProp = {\r\n    name: \"photo\",\r\n    multiple: true,\r\n    action: `${process.env.REACT_APP_BACKEND_URI}/upload`,\r\n    onChange(info) {\r\n      const { status, response } = info.file;\r\n\r\n      if (status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === \"done\" && response.isUploaded) {\r\n        setPhoto(response.public_uri);\r\n\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  const handleSubmit = async (data) => {\r\n    data.reference = reference;\r\n    data.photo = photo;\r\n\r\n    const response = await dispatch(\r\n      insertData(data, authUser.token, authUser._id)\r\n    );\r\n\r\n    setTimeout(() => {\r\n      response && props.history.push(\"/mybooks\");\r\n    }, 300);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"site-page-header-ghost-wrapper\">\r\n        <PageHeader\r\n          ghost={false}\r\n          title=\"Add book\"\r\n          onBack={() => window.history.back()}\r\n        ></PageHeader>\r\n      </div>\r\n\r\n      <Form layout=\"vertical\" onFinish={handleSubmit}>\r\n        <Form.Item\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          rules={[{ required: true, message: \"Please input title!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          rules={[{ required: true, message: \"Please input description!\" }]}\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n          name=\"photo\"\r\n          label=\"Photo\"\r\n          rules={[{ required: true, message: \"Please input photo!\" }]}\r\n        >\r\n          <Input value=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          name=\"photo\"\r\n          label=\"Cover Photo\"\r\n          rules={[{ required: true, message: \"Please input your book photo!\" }]}\r\n        >\r\n          <Dragger {...photoProp}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n            <p className=\"ant-upload-hint\">Upload your book cover image</p>\r\n          </Dragger>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Category\" name=\"category\">\r\n          <Select>\r\n            {categories &&\r\n              categories.length > 0 &&\r\n              categories.map((category) => {\r\n                return (\r\n                  <Select.Option value={category._id}>\r\n                    {category.name}\r\n                  </Select.Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"pages\"\r\n          label=\"Number of pages\"\r\n          rules={[{ required: true, message: \"Please input your book pages!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"reference\"\r\n          label=\"Reference\"\r\n          rules={[\r\n            { required: true, message: \"Please input your book reference!\" },\r\n          ]}\r\n        >\r\n          <Dragger {...referenceProps}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n            <p className=\"ant-upload-hint\">Upload your book PDF</p>\r\n          </Dragger>\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n          name=\"reference\"\r\n          label=\"Reference\"\r\n          rules={[\r\n            { required: true, message: \"Please input your book reference!\" },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          name=\"isOnTrueEvent\"\r\n          label=\"Is on True Event\"\r\n          rules={[{ required: true, message: \"Please select event!\" }]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio value=\"1\">Yes</Radio>\r\n            <Radio value=\"0\">No</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Add);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { updateData, fetchCategories } from \"../../redux/ActionApi\";\r\n\r\nimport {\r\n  PageHeader,\r\n  Button,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  Select,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\n\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\n\r\nconst Edit = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const authUser = useSelector((state) => state.authUser.authUser);\r\n\r\n  const categories = useSelector((state) => state.books.categories);\r\n\r\n  const books = useSelector((state) => {\r\n    return state.books.books;\r\n  });\r\n  const book = books.filter((book) => book._id === props.match.params.bookId);\r\n\r\n  const [photo, setPhoto] = useState(book[0] ? book[0].photo : \" \");\r\n  const [reference, setReference] = useState(book[0] ? book[0].reference : \" \");\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories());\r\n  }, []);\r\n\r\n  const { Dragger } = Upload;\r\n\r\n  const photoProps = {\r\n    name: \"photo\",\r\n    multiple: true,\r\n    action: `${process.env.REACT_APP_BACKEND_URI}/upload`,\r\n    onChange(info) {\r\n      const { status, response } = info.file;\r\n\r\n      if (status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === \"done\" && response.isUploaded) {\r\n        setPhoto(response.public_uri);\r\n\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  const referenceProps = {\r\n    name: \"reference\",\r\n    multiple: true,\r\n    action: `${process.env.REACT_APP_BACKEND_URI}/upload`,\r\n    onChange(info) {\r\n      const { status, response } = info.file;\r\n\r\n      if (status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === \"done\" && response.isUploaded) {\r\n        setReference(response.public_uri);\r\n\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  const handleSubmit = (data) => {\r\n    data.photo = photo;\r\n    data.reference = reference;\r\n\r\n    const response = dispatch(\r\n      updateData(data, props.match.params.bookId, authUser._id, authUser.token)\r\n    );\r\n\r\n    response && props.history.push(\"/mybooks\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"site-page-header-ghost-wrapper\">\r\n        <PageHeader\r\n          ghost={false}\r\n          title=\"Edit book\"\r\n          onBack={() => window.history.back()}\r\n        ></PageHeader>\r\n      </div>\r\n\r\n      <Form layout=\"vertical\" onFinish={handleSubmit}>\r\n        <Form.Item\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          initialValue={book[0] && book[0].title}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          initialValue={book[0] && book[0].description}\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"photo\" label=\"Cover Photo\">\r\n          <Dragger {...photoProps}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n            <p className=\"ant-upload-hint\">Upload your book cover image</p>\r\n          </Dragger>\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n          name=\"photo\"\r\n          label=\"Photo\"\r\n          rules={[{ required: true, message: \"Please input photo!\" }]}\r\n          initialValue={book[0] && book[0].photo}\r\n        >\r\n          <Input value=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item label=\"Category\" name=\"category\">\r\n          <Select defaultValue={book[0] && book[0].category}>\r\n            {categories &&\r\n              categories.length > 0 &&\r\n              categories.map((category) => {\r\n                return (\r\n                  <Select.Option value={category._id}>\r\n                    {category.name}\r\n                  </Select.Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"pages\"\r\n          label=\"Number of pages\"\r\n          initialValue={book[0] && book[0].pages}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/*  <Form.Item\r\n          name=\"reference\"\r\n          label=\"Reference\"\r\n          rules={[\r\n            { required: true, message: \"Please input your book reference!\" },\r\n          ]}\r\n          initialValue={book[0] && book[0].reference}\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item name=\"reference\" label=\"Reference\">\r\n          <Dragger {...referenceProps}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n            <p className=\"ant-upload-hint\">Upload your book PDF</p>\r\n          </Dragger>\r\n        </Form.Item>\r\n        <Form.Item name=\"isOnTrueEvent\" label=\"Is on True Event\">\r\n          <Radio.Group\r\n            defaultValue={book[0] && book[0].isOnTrueEvent ? \"1\" : \"0\"}\r\n          >\r\n            <Radio value=\"1\">Yes</Radio>\r\n            <Radio value=\"0\">No</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        {/* //book[0] && book[0].isOnTrueEvent */}\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { PageHeader, Input, Select, Card, Col, Row, Form } from \"antd\";\r\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  fetchBooks,\r\n  fetchCategories,\r\n  fetchAuthors,\r\n} from \"../../redux/ActionApi\";\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nconst SearchBooks = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchFilter, setSearchFilter] = useState(\"title\");\r\n  const [filteredCategory, setFilteredCategory] = useState(\"\");\r\n  const [filteredAuthor, setFilteredAuthor] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n\r\n  const books = useSelector((state) => state.books.searchBooks);\r\n  const categories = useSelector((state) => state.books.categories);\r\n  const authors = useSelector((state) => state.books.authors);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBooks());\r\n    dispatch(fetchCategories());\r\n    dispatch(fetchAuthors());\r\n  }, []);\r\n\r\n  const handleSearchChange = (event) => {\r\n    if (searchFilter === \"title\") {\r\n      const filtered = books.filter((book) => {\r\n        return book.title.startsWith(event.target.value);\r\n      });\r\n\r\n      setSearchResult(filtered);\r\n    }\r\n\r\n    if (searchFilter === \"category\") {\r\n      const filtered = books.filter((book) => {\r\n        return (\r\n          book.title.startsWith(event.target.value) &&\r\n          book.category._id === filteredCategory\r\n        );\r\n      });\r\n\r\n      setSearchResult(filtered);\r\n    }\r\n\r\n    if (searchFilter === \"author\") {\r\n      const filtered = books.filter((book) => {\r\n        return (\r\n          book.title.startsWith(event.target.value) &&\r\n          book.author === filteredAuthor\r\n        );\r\n      });\r\n\r\n      setSearchResult(filtered);\r\n    }\r\n  };\r\n\r\n  const handleSearchFilter = (e) => {\r\n    setSearchFilter(e);\r\n  };\r\n\r\n  const handleCategoryFilter = (e) => {\r\n    setFilteredCategory(e);\r\n  };\r\n\r\n  const handleAuthorFilter = (e) => {\r\n    setFilteredAuthor(e);\r\n  };\r\n\r\n  const handleBookView = (_id) => {\r\n    props.history.push(`/book/${_id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"site-page-header-ghost-wrapper\">\r\n        <PageHeader ghost={false}>\r\n          <Form name=\"basic\">\r\n            <Form.Item>\r\n              <Input.Group compact>\r\n                <Select defaultValue=\"title\" onChange={handleSearchFilter}>\r\n                  <Option value=\"category\">Category</Option>\r\n                  <Option value=\"author\">Author</Option>\r\n                  <Option value=\"title\">Title</Option>\r\n                </Select>\r\n                <Search\r\n                  placeholder=\"Search books\"\r\n                  onSearch={(value) => console.log(\"SEARCH BUTTON CLICKED\")}\r\n                  onChange={(value) => handleSearchChange(value)}\r\n                  style={{ width: 200 }}\r\n                />\r\n              </Input.Group>\r\n            </Form.Item>\r\n\r\n            {searchFilter !== \"title\" && (\r\n              <Form.Item>\r\n                <Input.Group compact>\r\n                  <Select\r\n                    showSearch\r\n                    style={{ width: 270 }}\r\n                    placeholder={\r\n                      (searchFilter === \"author\" && \"Search a author\") ||\r\n                      (searchFilter === \"category\" && \"Search a category\")\r\n                    }\r\n                    optionFilterProp=\"children\"\r\n                    onChange={\r\n                      (searchFilter === \"category\" && handleCategoryFilter) ||\r\n                      (searchFilter === \"author\" && handleAuthorFilter)\r\n                    }\r\n                    onSearch={() => 1}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {searchFilter === \"category\" &&\r\n                      categories.map((category) => {\r\n                        return (\r\n                          <Option value={category._id}>{category.name}</Option>\r\n                        );\r\n                      })}\r\n\r\n                    {searchFilter === \"author\" &&\r\n                      authors.map((author) => {\r\n                        return (\r\n                          <Option value={author._id}>{author.firstname}</Option>\r\n                        );\r\n                      })}\r\n                  </Select>\r\n                </Input.Group>\r\n              </Form.Item>\r\n            )}\r\n          </Form>\r\n        </PageHeader>\r\n      </div>\r\n\r\n      <Row gutter={[16, 16]}>\r\n        {searchResult.map((book) => {\r\n          return (\r\n            <Col xs={24} md={4}>\r\n              <Card\r\n                title={book.title}\r\n                bordered={false}\r\n                cover={\r\n                  <img\r\n                    alt=\"example\"\r\n                    src={book.photo}\r\n                    onError={(e) =>\r\n                      (e.target.src =\r\n                        \"https://images.unsplash.com/photo-1592859372969-7ce244fb6582?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\")\r\n                    }\r\n                    style={{ height: \"200px\", objectFit: \"contain\" }}\r\n                  />\r\n                }\r\n              >\r\n                <Row gutter={24}>\r\n                  <Col span={19}>\r\n                    <p>{book.description}</p>\r\n                  </Col>\r\n                  <Col span={5}>\r\n                    <InfoCircleOutlined\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => handleBookView(book._id)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n","import React from \"react\";\r\nimport { Result, Button } from \"antd\";\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <Result\r\n      status=\"404\"\r\n      title=\"404\"\r\n      subTitle=\"Sorry, the page you visited does not exist.\"\r\n      extra={<Button type=\"primary\">Back Home</Button>}\r\n    />\r\n  );\r\n};\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nconst PrivateRoute = ({ component: Component, authUser, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authUser.isLoggedIn && authUser.role === \"writer\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/dashboard\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Card, Col, Row, Typography, Button } from \"antd\";\r\nimport { CheckOutlined } from \"@ant-design/icons\";\r\n\r\nimport { updatePlan } from \"../../redux/ActionApi\";\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Plans = (props) => {\r\n  const authUser = useSelector((state) => state.authUser.authUser);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePlanSelection = (plan) => {\r\n    const response = dispatch(\r\n      updatePlan({ plan }, authUser._id, authUser.token)\r\n    );\r\n\r\n    setTimeout(() => response && props.history.push(\"/\"), 300);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"site-card-wrapper\">\r\n        <Title level={3}>Pricing</Title>\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} md={8}>\r\n            <Card\r\n              title=\"Basic\"\r\n              bordered={true}\r\n              style={{ border: \"1px solid #1890ff\" }}\r\n              actions={[\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => handlePlanSelection(\"basic\")}\r\n                  style={{ display: \"block\" }}\r\n                >\r\n                  Select\r\n                </Button>,\r\n                ,\r\n              ]}\r\n            >\r\n              <p>Free</p>\r\n              <Row gutter={24}>\r\n                <Col span={24}>\r\n                  <CheckOutlined />\r\n                  {\"  \"}\r\n                  <Text type=\"secondary\">Access 1 Book/Month</Text>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <CheckOutlined />\r\n                  {\"  \"}\r\n                  <Text type=\"secondary\">1 Book/Time</Text>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} md={8}>\r\n            <Card\r\n              title=\"Standard\"\r\n              bordered={true}\r\n              style={{ border: \"1px solid #1890ff\" }}\r\n              actions={[\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => handlePlanSelection(\"standard\")}\r\n                  style={{ display: \"block\" }}\r\n                >\r\n                  Select\r\n                </Button>,\r\n              ]}\r\n            >\r\n              <p>$5 / month</p>\r\n              <Row gutter={24}>\r\n                <Col span={24}>\r\n                  <CheckOutlined /> {\"  \"}\r\n                  <Text type=\"secondary\">Read/Access 5 Books/Month</Text>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <CheckOutlined />\r\n                  <Text type=\"secondary\">3 Book/Time</Text>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} md={8}>\r\n            <Card\r\n              title=\"Prime\"\r\n              bordered={true}\r\n              style={{ border: \"1px solid #1890ff\" }}\r\n              actions={[\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => handlePlanSelection(\"prime\")}\r\n                  style={{ display: \"block\" }}\r\n                >\r\n                  Select\r\n                </Button>,\r\n              ]}\r\n            >\r\n              <p>$10 / month</p>\r\n              <Row gutter={24}>\r\n                <Col span={24}>\r\n                  <CheckOutlined />\r\n                  {\"  \"}\r\n                  <Text type=\"secondary\">Read/Access 15 Books/Month</Text>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <CheckOutlined />\r\n                  {\"  \"}\r\n                  <Text type=\"secondary\">7 Book/Time</Text>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Plans);\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { PageHeader, Button } from \"antd\";\r\n\r\nimport { Document, Page } from \"react-pdf/dist/entry.webpack\";\r\n\r\nfunction MyApp() {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const currentReading = useSelector((state) => state.books.currentReading);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"site-page-header-ghost-wrapper\">\r\n        <PageHeader\r\n          ghost={false}\r\n          title=\"Reading\"\r\n          onBack={() => window.history.back()}\r\n        ></PageHeader>\r\n      </div>\r\n      <Document file={currentReading.url} onLoadSuccess={onDocumentLoadSuccess}>\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n      <p>\r\n        <Button\r\n          onClick={() => {\r\n            if (pageNumber > 1) {\r\n              setPageNumber(pageNumber - 1);\r\n            }\r\n          }}\r\n        >\r\n          Prev\r\n        </Button>{\" \"}\r\n        Page {pageNumber} of {numPages}{\" \"}\r\n        <Button\r\n          onClick={() => {\r\n            if (pageNumber < numPages) {\r\n              setPageNumber(pageNumber + 1);\r\n            }\r\n          }}\r\n        >\r\n          Next\r\n        </Button>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nexport default MyApp;\r\n","const initState = {\r\n  books: [],\r\n  book: {},\r\n  currentReading: {},\r\n  searchBooks: [],\r\n  categories: [],\r\n  authors: [],\r\n  loading: false,\r\n};\r\n\r\nexport const bookReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"GETBOOKS\":\r\n      return {\r\n        ...state,\r\n        books: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case \"GETBOOK\":\r\n      return {\r\n        ...state,\r\n        book: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case \"SETBOOKTOREAD\":\r\n      return {\r\n        ...state,\r\n        currentReading: action.payload,\r\n      };\r\n\r\n    case \"GETALLBOOKS\":\r\n      return {\r\n        ...state,\r\n        searchBooks: action.payload,\r\n      };\r\n\r\n    case \"GETALLCATEGORIES\":\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n      };\r\n\r\n    case \"GETAUTHORS\":\r\n      return {\r\n        ...state,\r\n        authors: action.payload,\r\n      };\r\n\r\n    case \"INSERT\":\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"UPDATE\":\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"DELETE\":\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case \"SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case \"FAILURE\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initState = {\r\n  authUser: window.localStorage.getItem(\"authUser\")\r\n    ? JSON.parse(window.localStorage.getItem(\"authUser\"))\r\n    : {},\r\n  user: {},\r\n  loading: false,\r\n};\r\n\r\nexport const userReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      window.localStorage.setItem(\"authUser\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case \"AUTHUSER\":\r\n      if (action.payload.mostLikedBooks) {\r\n        return {\r\n          ...state,\r\n          user: {\r\n            mostLikedBooks: action.payload.mostLikedBooks,\r\n            mostReadBooks: state.user.mostReadBooks,\r\n          },\r\n          loading: false,\r\n        };\r\n      } else if (action.payload.mostReadBooks) {\r\n        return {\r\n          ...state,\r\n          user: {\r\n            mostReadBooks: action.payload.mostReadBooks,\r\n            mostLikedBooks: state.user.mostLikedBooks,\r\n          },\r\n          loading: false,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          user: action.payload,\r\n        };\r\n      }\r\n    /*  return {\r\n        ...state,\r\n        ...state.user,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n */\r\n    case \"LOGOUT\":\r\n      window.localStorage.setItem(\"authUser\", JSON.stringify({}));\r\n      window.localStorage.removeItem(\"authUser\");\r\n      return {\r\n        ...state,\r\n        authUser: {},\r\n        user: {},\r\n        loading: false,\r\n      };\r\n\r\n    case \"GET\":\r\n      const authUser = JSON.parse(window.localStorage.getItem(\"authUser\"));\r\n      return {\r\n        authUser,\r\n      };\r\n\r\n    case \"LOADING\":\r\n      return { ...state, loading: true };\r\n\r\n    case \"SUCCESS\":\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initState = {\r\n  loading: false,\r\n};\r\n\r\nexport const GlobalReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"SUCCESSS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { bookReducer } from \"./BookReducer\";\r\nimport { userReducer } from \"./userReducer\";\r\nimport { GlobalReducer } from \"./GlobalReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  authUser: userReducer,\r\n  books: bookReducer,\r\n  global: GlobalReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { logger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nimport Navbar from \"./components/Header\";\nimport Signup from \"./components/Singup\";\nimport Signin from \"./components/Singin\";\nimport ForgetPassword from \"./components/forget-password\";\nimport ResetPassword from \"./components/Reset-Password\";\nimport Writer from \"./components/Dashboard/writer\";\nimport Reader from \"./components/Dashboard/reader\";\nimport MyBooks from \"./components/Books\";\nimport Book from \"./components/Books/book\";\nimport AddBook from \"./components/Books/add\";\nimport EditBook from \"./components/Books/edit\";\nimport Search from \"./components/Search\";\nimport ErrorPage from \"./components/ErrorPages/404\";\nimport PrivateRoute from \"./components/Helper/PrivateRoute\";\nimport Plans from \"./components/Plans\";\nimport ViewBook from \"./components/Books/view\";\n\nimport store from \"./redux/store\";\nimport { Provider, useSelector } from \"react-redux\";\n\nconst { Content } = Layout;\n\nconst AppRouter = (props) => {\n  const authUser = useSelector((state) => state.authUser.authUser);\n\n  const isLoggedIn = window.localStorage.getItem(\"authUser\") ? true : false;\n  /* \n  useEffect(() => {\n    props.getAuthUser();\n  }, []); */\n\n  return (\n    <div>\n      <Layout>\n        <Router>\n          <Navbar isLoggedIn={isLoggedIn} />\n          <Content\n            className=\"site-layout\"\n            style={{ padding: \"0 50px\", marginTop: 10 }}\n          >\n            <div\n              className=\"site-layout-background\"\n              style={{ padding: 10, minHeight: 380 }}\n            >\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => {\n                    if (authUser && authUser.role === \"writer\") {\n                      return <Writer />;\n                    } else if (authUser && authUser.role === \"reader\") {\n                      return <Reader />;\n                    } else {\n                      return <Signin />;\n                    }\n                  }}\n                />\n                <Route exact path=\"/signup\" component={Signup} />\n\n                <Route exact path=\"/signin\" component={Signin} />\n\n                <Route\n                  exact\n                  path=\"/forget-password\"\n                  component={ForgetPassword}\n                />\n\n                <Route\n                  exact\n                  path=\"/reset-password/:token\"\n                  component={ResetPassword}\n                />\n\n                {/* <Route exact path=\"/mybooks\" component={MyBooks} /> */}\n\n                <PrivateRoute\n                  exact\n                  path=\"/mybooks\"\n                  component={MyBooks}\n                  authUser={authUser}\n                  {...props}\n                />\n\n                <PrivateRoute\n                  exact\n                  path=\"/add-book\"\n                  component={AddBook}\n                  authUser={authUser}\n                  {...props}\n                />\n\n                {/* <Route exact path=\"/add-book\" component={AddBook} /> */}\n\n                <PrivateRoute\n                  exact\n                  path=\"/edit-book/:bookId\"\n                  component={EditBook}\n                  authUser={authUser}\n                  {...props}\n                />\n\n                {/* <Route exact path=\"/edit-book/:bookId\" component={EditBook} /> */}\n                <Route exact path=\"/book/view\" component={ViewBook} />\n\n                <Route exact path=\"/book/:bookId\" component={Book} />\n\n                <Route exact path=\"/search\" component={Search} />\n\n                <Route exact path=\"/plans\" component={Plans} />\n\n                <Route path=\"*\" component={ErrorPage} />\n              </Switch>\n            </div>\n          </Content>\n        </Router>\n      </Layout>\n    </div>\n  );\n};\n\nconst MainComponent = withRouter(AppRouter);\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <MainComponent />\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}